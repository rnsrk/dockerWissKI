services:

  drupal:
    build:
      context: drupal
      dockerfile: Dockerfile
    container_name: wisski-performance-tuned-drupal
    restart: always
    depends_on:
      mariadb:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
    environment:
      DOMAIN: ${DRUPAL_DOMAIN:-localhost}
      DRUPAL_TRUSTED_HOST: ${DRUPAL_DOMAIN:-localhost}
      WISSKI_BASE_RECIPE_VERSION: ${WISSKI_BASE_RECIPE_VERSION:-1.x-dev}
      DRUPAL_USER: ${DRUPAL_USER:-admin}
      DRUPAL_PASSWORD: ${DRUPAL_PASSWORD:-admin}
      USER_GROUPS: ${USER_GROUPS:-}
      SITE_NAME: ${SITE_NAME:-My WissKI}
      TS_USERNAME: ${TS_USERNAME:-}
      TS_PASSWORD: ${TS_PASSWORD:-}
      TS_REPOSITORY: ${TS_REPOSITORY:-default}
      DEFAULT_GRAPH: ${DEFAULT_GRAPH:-https://my.wiss-ki.eu/}
      TS_READ_URL: http://rdf4j:8080/rdf4j-server/repositories/${TS_REPOSITORY:-default}
      TS_WRITE_URL: http://rdf4j:8080/rdf4j-server/repositories/${TS_REPOSITORY:-default}/statements
      DB_NAME: ${DB_NAME:-DATABASE}
      DB_USER: ${DB_USER:-DBUSER}
      DB_PASSWORD: ${DB_PASSWORD:-USERPW}
      DB_HOST: mariadb
      DB_PORT: 3306
      DB_DRIVER: mysql
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - ${DRUPAL_PORT:-80}:80
    volumes:
      - private_files:/var/www/private_files
      - drupal-data:/opt/drupal
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mariadb:
    image: mariadb:11.5
    container_name: wisski-performance-tuned-mariadb
    restart: always
    command: >
      --transaction-isolation=READ-COMMITTED
      --innodb-buffer-pool-size=1G
      --innodb-log-file-size=256M
      --innodb-flush-log-at-trx-commit=2
      --innodb-flush-method=O_DIRECT
      --innodb-file-per-table=1
      --max-connections=200
      --table-open-cache=4000
      --query-cache-type=1
      --query-cache-size=64M
      --query-cache-limit=2M
      --thread-cache-size=50
      --tmp-table-size=64M
      --max-heap-table-size=64M
      --join-buffer-size=4M
      --sort-buffer-size=4M
      --read-rnd-buffer-size=2M
      --binlog-cache-size=1M
      --expire-logs-days=7
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-ROOTPW}
      MARIADB_PASSWORD: ${DB_PASSWORD:-USERPW}
      MARIADB_USER: ${DB_USER:-DBUSER}
      MARIADB_DATABASE: ${DB_NAME:-DATABASE}
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized" ]
      start_period: 1m
      start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3
    # Uncomment to expose the MariaDB port to the host
    #ports:
    #  - ${DB_PORT:-3306}:3306
    volumes:
      - mariadb-data:/var/lib/mysql
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  solr:
    image: solr:9.7
    container_name: wisski-performance-tuned-solr
    restart: always
    environment:
      SOLR_JAVA_MEM: "-Xms512M -Xmx1G"
    volumes:
      - solr-data:/var/solr
    ports:
      - ${SOLR_PORT:-8983}:8983
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1536M
        reservations:
          cpus: '0.25'
          memory: 512M

  adminer:
    image: adminer
    container_name: wisski-performance-tuned-adminer
    restart: always
    ports:
      - ${ADMINER_PORT:-8081}:8080

  rdf4j:
    build:
      context: rdf4j
    container_name: wisski-performance-tuned-rdf4j
    restart: always
    environment:
      - JAVA_OPTS=-Xms1g -Xmx4g
    volumes:
      - rdf4j-data:/var/rdf4j
      - rdf4j-logs:/usr/local/tomcat/logs
    healthcheck:
      test: [ "CMD", "curl", "http://rdf4j:8080/rdf4j-server/protocol" ]
      start_period: 30s
      start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3
    ports:
      - ${RDF4J_PORT:-8080}:8080
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 5G
        reservations:
          cpus: '0.5'
          memory: 1G

  redis:
    image: redis:7.4-alpine
    container_name: wisski-performance-tuned-redis
    restart: always
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru --save 60 1000 --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    ports:
      - ${REDIS_PORT:-6379}:6379
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 768M
        reservations:
          cpus: '0.25'
          memory: 256M

  varnish:
    image: varnish:7.6
    container_name: wisski-performance-tuned-varnish
    restart: always
    depends_on:
      drupal:
        condition: service_healthy
    environment:
      - VARNISH_SIZE=256M
    volumes:
      - ./varnish/default.vcl:/etc/varnish/default.vcl:ro
    tmpfs:
      - /var/lib/varnish/varnishd:exec,uid=999,gid=999
    ports:
      - ${VARNISH_PORT:-8000}:80
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "varnishstat", "-1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  rdf4j-logs:
  rdf4j-data:
  drupal-data:
  mariadb-data:
  private_files:
  solr-data:
  redis-data:
